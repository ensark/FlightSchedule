// <auto-generated />
using System;
using FlightSchedule.DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightSchedule.DataAccessLayer.Migrations
{
    [DbContext(typeof(FlightScheduleDbContext))]
    [Migration("20181105180925_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlightSchedule.DataAccessLayer.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId");

                    b.Property<DateTimeOffset>("ArrivalTime");

                    b.Property<DateTimeOffset>("DepartureTime");

                    b.Property<int>("RouteId");

                    b.HasKey("FlightId");

                    b.HasIndex("RouteId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightSchedule.DataAccessLayer.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("Date");

                    b.Property<int>("DestinationCityId");

                    b.Property<int>("OriginCityId");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");

                    b.HasData(
                        new { RouteId = 5555, DepartureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DestinationCityId = 44444, OriginCityId = 3333 }
                    );
                });

            modelBuilder.Entity("FlightSchedule.DataAccessLayer.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgencyId");

                    b.Property<int>("DestinationCityId");

                    b.Property<int>("OriginCityId");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FlightSchedule.DataAccessLayer.Models.Flight", b =>
                {
                    b.HasOne("FlightSchedule.DataAccessLayer.Models.Route", "Route")
                        .WithMany("Flights")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
